<?xml version="1.0" encoding="UTF-8"?>
<project name="ohmage" default="help">

	<!-- The local.properties file is created and updated by the 'android' tool.
		 It contains the path to the SDK. It should *NOT* be checked into
		 Version Control Systems. -->
	<loadproperties srcFile="local.properties" />

	<!-- The ant.properties file can be created by you. It is only edited by the
		 'android' tool to add properties to it.
		 This is the place to change some Ant specific build properties.
		 Here are some properties you may want to change/update:

		 source.dir
			 The name of the source directory. Default is 'src'.
		 out.dir
			 The name of the output directory. Default is 'bin'.

		 For other overridable properties, look at the beginning of the rules
		 files in the SDK, at tools/ant/build.xml

		 Properties related to the SDK location or the project target should
		 be updated using the 'android' tool with the 'update' action.

		 This file is an integral part of the build system for your
		 application and should be checked into Version Control Systems.

		 -->
	<property file="ant.properties" />

	<!-- The default release name for the omage-debug and ohmage-release tasks -->
	<property name="release.name" value="release" />

	<!-- The project.properties file is created and updated by the 'android'
		 tool, as well as ADT.

		 This contains project specific properties such as project target, and library
		 dependencies. Lower level build properties are stored in ant.properties
		 (or in .classpath for Eclipse projects).

		 This file is an integral part of the build system for your
		 application and should be checked into Version Control Systems. -->
	<loadproperties srcFile="project.properties" />

	<!-- quick check on sdk.dir -->
	<fail
			message="sdk.dir is missing. Make sure to generate local.properties using 'android update project'"
			unless="sdk.dir"
	/>

<!-- extension targets. Uncomment the ones where you want to do custom work
	 in between standard targets -->

	<target name="-pre-build" depends="gen-config" />

	<target name="-pre-compile" />

<!--
	/* This is typically used for code obfuscation.
	   Compiled code location: ${out.classes.absolute.dir}
	   If this is not done in place, override ${out.dex.input.absolute.dir} */
	<target name="-post-compile">
	</target>
-->

	<!-- ********** release specific targets ********** -->

	<target name="ohmage-debug" depends="-set-output-file, debug"
		description="Builds the debug version of the application">
	</target>

	<target name="ohmage-release"
		depends="-set-release-output-file, release"
		if="has.keystore"
		description="Builds the release version of the application">
	</target>

	<target name="tag-release">
		<sequential>
			<git-checkout-local branch="cuttingedge" dir="." />
			<read-release-name />
			<git-tag tagName="${ant.project.name}-${manifest.versionName}-cuttingedge" dir="." />
			<git-checkout-local branch="NIH" dir="." />
			<git-tag tagName="${ant.project.name}-${manifest.versionName}-NIH" dir="." />
		</sequential>
	</target>

	<target name="clean-for-release">
		<delete>
			<fileset dir="${out.absolute.dir}" erroronmissingdir="false">
				<patternset>
					<include name="${resource.package.file.name}*"/>
					<include name="classes.dex*"/>
					<include name="classes/**/*"/>
					<include name="res/**/*"/>
					<include name="*packaged*"/>
					<include name="*unaligned*"/>
				</patternset>
			</fileset>
		</delete>
		<delete dir="${gen.absolute.dir}" />
	</target>

	<!-- ********** git specific targets ********** -->

	<target name="checkout-cuttingedge" depends="clean-for-release">
		<git-checkout-local branch="cuttingedge" dir="." />
	</target>

	<target name="checkout-NIH" depends="clean-for-release">
		<git-checkout-local branch="NIH" dir="." />
	</target>

	<!-- Helper functions -->

	<target name="-set-output-file">
		<sequential>
			<read-release-name />
			<property name="out.packaged.file" location="${out.absolute.dir}/${ant.project.name}-${manifest.versionName}-${config.server.shortname}-${release.name}-${manifest.versionCode}-unaligned.apk" />
			<property name="out.final.file" location="${out.absolute.dir}/${ant.project.name}-${manifest.versionName}-${config.server.shortname}-${release.name}-${manifest.versionCode}.apk" />
		</sequential>
	</target>

	<target name="-set-release-output-file">
		<sequential>
			<read-release-name />
			<property name="out.unaligned.file" location="${out.absolute.dir}/${ant.project.name}-${manifest.versionName}-${config.server.shortname}-${release.name}-${manifest.versionCode}-unaligned-SIGNED.apk" />
			<property name="out.packaged.file" location="${out.absolute.dir}/${ant.project.name}-${manifest.versionName}-${config.server.shortname}-${release.name}-${manifest.versionCode}-packaged-SIGNED.apk" />
			<property name="out.final.file" location="${out.absolute.dir}/${ant.project.name}-${manifest.versionName}-${config.server.shortname}-${release.name}-${manifest.versionCode}-SIGNED.apk" />
		</sequential>
	</target>

	<macrodef name="read-release-name">
		<sequential>
			<xpath input="AndroidManifest.xml" expression="/manifest/@android:versionCode"
				output="manifest.versionCode" />
			<xpath input="AndroidManifest.xml" expression="/manifest/@android:versionName"
				output="manifest.versionName" />
			</sequential>
	</macrodef>

	<!-- version-tag: custom -->
	<import file="${sdk.dir}/tools/ant/build.xml" />

	<import file="git-build.xml" />

	<import file="gen-config.xml" />
</project>